name: 'Unit tests'
on:
  pull_request:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    environment: test

    env:
      PORT: ${{ vars.PORT }}
      CHAIN_ID: ${{ vars.CHAIN_ID }}
      BATCH_SIZE: ${{ vars.BATCH_SIZE }}
      DELAY: ${{ vars.DELAY }}
      SENTRY_ENVIRONMENT: ${{ vars.SENTRY_ENVIRONMENT }}
      SUPABASE_CACHING_DB_URL: ${{ vars.SUPABASE_CACHING_DB_URL }}
      SUPABASE_CACHING_SERVICE_API_KEY: ${{ secrets.SUPABASE_CACHING_SERVICE_API_KEY }}
      ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
      INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
      DRPC_API_KEY: ${{ secrets.DRPC_API_KEY }}
      SUPABASE_DATA_DB_URL: ${{ vars.SUPABASE_DATA_DB_URL }}
      SUPABASE_DATA_SERVICE_API_KEY: ${{ secrets.SUPABASE_DATA_SERVICE_API_KEY }}

    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - name: 'Install Node'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
      - name: Install dependencies
        run: pnpm install

      - name: 'Run unit tests'
        run: npx vitest --coverage.enabled true
      - name: 'Report Coverage'
        # Set if: always() to also generate the report if tests are failing
        # Only works if you set `reportOnFailure: true` in your vite config as specified above
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2